%Q@
@UUT
TU
WU
	UWWUK
@UUT
KCBLTU
WU
	U	W	
	W	UK
@UU			TU
WU
	UWWUK
@UU	TUU
WU
	UWW
		UK
@UU		TU
WU
	U
 UK@
@UUT
TU
WU
	UWWUH
@UUT
KCBLTU
WU
	U	W	
	W	UH
@UU			TU
WU
	UWWUH
@UU	TUU
WU
	UWW
		UH
@UU		TU
WU
	U
 UH@
@UUT
TU
WU
	UWWUI
@UUT
KCBLTU
WU
	U	W	
	W	UI
@UU			TU
WU
	UWWUI
@UU	TUU
WU
	UWW
		UI
@UU		TU
WU
	U
 UI